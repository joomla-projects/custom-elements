function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function t(e) {
  return (t = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
    return _typeof(t);
  } : function (t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
  })(e);
}

function e(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}

function o(t, e) {
  for (var o = 0; o < e.length; o++) {
    var n = e[o];
    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
  }
}

function n(e, o) {
  return !o || "object" !== t(o) && "function" != typeof o ? function (t) {
    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t;
  }(e) : o;
}

function i(t) {
  var e = "function" == typeof Map ? new Map() : void 0;
  return (i = function i(t) {
    if (null === t || (o = t, -1 === Function.toString.call(o).indexOf("[native code]"))) return t;
    var o;
    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");

    if (void 0 !== e) {
      if (e.has(t)) return e.get(t);
      e.set(t, n);
    }

    function n() {
      return r(t, arguments, u(this).constructor);
    }

    return n.prototype = Object.create(t.prototype, {
      constructor: {
        value: n,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), a(n, t);
  })(t);
}

function r(t, e, o) {
  return (r = s() ? Reflect.construct : function (t, e, o) {
    var n = [null];
    n.push.apply(n, e);
    var i = new (Function.bind.apply(t, n))();
    return o && a(i, o.prototype), i;
  }).apply(null, arguments);
}

function s() {
  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
  if (Reflect.construct.sham) return !1;
  if ("function" == typeof Proxy) return !0;

  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
  } catch (t) {
    return !1;
  }
}

function a(t, e) {
  return (a = Object.setPrototypeOf || function (t, e) {
    return t.__proto__ = e, t;
  })(t, e);
}

function u(t) {
  return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  })(t);
}

var l = function (t) {
  !function (t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
      constructor: {
        value: t,
        writable: !0,
        configurable: !0
      }
    }), e && a(t, e);
  }(p, i(HTMLElement));
  var r,
      l,
      c,
      h,
      f,
      d = (r = p, l = s(), function () {
    var t,
        e = u(r);

    if (l) {
      var o = u(this).constructor;
      t = Reflect.construct(e, arguments, o);
    } else t = e.apply(this, arguments);

    return n(this, t);
  });

  function p() {
    return e(this, p), d.apply(this, arguments);
  }

  return c = p, f = [{
    key: "observedAttributes",
    get: function get() {
      return ["type", "role", "dismiss", "acknowledge", "href"];
    }
  }], (h = [{
    key: "type",
    get: function get() {
      return this.getAttribute("type");
    },
    set: function set(t) {
      return this.setAttribute("type", t);
    }
  }, {
    key: "role",
    get: function get() {
      return this.getAttribute("role");
    },
    set: function set(t) {
      return this.setAttribute("role", t);
    }
  }, {
    key: "dismiss",
    get: function get() {
      return this.getAttribute("dismiss");
    }
  }, {
    key: "autodismiss",
    get: function get() {
      return this.getAttribute("auto-dismiss");
    }
  }, {
    key: "acknowledge",
    get: function get() {
      return this.getAttribute("acknowledge");
    }
  }, {
    key: "href",
    get: function get() {
      return this.getAttribute("href");
    }
  }, {
    key: "connectedCallback",
    value: function value() {
      this.classList.add("joomla-alert--show"), this.type && -1 !== ["info", "warning", "danger", "success"].indexOf(this.type) || this.setAttribute("type", "info"), this.role && -1 !== ["alert", "alertdialog"].indexOf(this.role) || this.setAttribute("role", "alert"), (this.hasAttribute("dismiss") || this.hasAttribute("acknowledge") || this.hasAttribute("href") && "" !== this.getAttribute("href") && !this.querySelector("button.joomla-alert--close") && !this.querySelector("button.joomla-alert-button--close")) && this.appendCloseButton(), this.hasAttribute("auto-dismiss") && this.autoDismiss(), this.dispatchCustomEvent("joomla.alert.show");
    }
  }, {
    key: "disconnectedCallback",
    value: function value() {
      this.removeEventListener("joomla.alert.show", this), this.removeEventListener("joomla.alert.close", this), this.removeEventListener("joomla.alert.closed", this), this.firstChild.tagName && "button" === this.firstChild.tagName.toLowerCase() && this.firstChild.removeEventListener("click", this);
    }
  }, {
    key: "attributeChangedCallback",
    value: function value(t, e, o) {
      switch (t) {
        case "type":
          (!o || o && -1 === ["info", "warning", "danger", "success"].indexOf(o)) && (this.type = "info");
          break;

        case "role":
          (!o || o && -1 === ["alert", "alertdialog"].indexOf(o)) && (this.role = "alert");
          break;

        case "dismiss":
        case "acknowledge":
          o && "true" !== o ? this.removeCloseButton() : this.appendCloseButton();
          break;

        case "auto-dismiss":
          this.autoDismiss();
          break;

        case "href":
          o && "" !== o ? this.querySelector("button.joomla-alert-button--close") || this.appendCloseButton() : this.removeCloseButton();
      }
    }
  }, {
    key: "markAlertClosed",
    value: function value(t) {
      this.dispatchCustomEvent("joomla.alert.closed"), t ? t.parentNode.removeChild(t) : this.remove();
    }
  }, {
    key: "close",
    value: function value() {
      var t = this,
          e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
      this.dispatchCustomEvent("joomla.alert.close"), window.matchMedia("(prefers-reduced-motion)").matches ? this.markAlertClosed(e) : this.addEventListener("transitionend", function () {
        return t.markAlertClosed(e);
      }, !1), this.classList.remove("joomla-alert--show");
    }
  }, {
    key: "dispatchCustomEvent",
    value: function value(t) {
      var e = new CustomEvent(t);
      e.relatedTarget = this, this.dispatchEvent(e), this.removeEventListener(t, this);
    }
  }, {
    key: "appendCloseButton",
    value: function value() {
      if (!this.querySelector("button.joomla-alert--close") && !this.querySelector("button.joomla-alert-button--close")) {
        var t = this,
            e = document.createElement("button");
        this.hasAttribute("dismiss") ? (e.classList.add("joomla-alert--close"), e.innerHTML = '<span aria-hidden="true">&times;</span>', e.setAttribute("aria-label", this.getText("JCLOSE", "Close"))) : (e.classList.add("joomla-alert-button--close"), this.hasAttribute("acknowledge") ? e.innerHTML = this.getText("JOK", "ok") : e.innerHTML = this.getText("JOPEN", "Open")), this.firstChild ? this.insertBefore(e, this.firstChild) : this.appendChild(e), e && (this.href ? e.addEventListener("click", function () {
          t.dispatchCustomEvent("joomla.alert.buttonClicked"), window.location.href = t.href, t.close();
        }) : e.addEventListener("click", function () {
          t.dispatchCustomEvent("joomla.alert.buttonClicked"), t.getAttribute("data-callback") ? (window[t.getAttribute("data-callback")](), t.close()) : t.close();
        }));
      }
    }
  }, {
    key: "autoDismiss",
    value: function value() {
      var t = this;
      setTimeout(function () {
        t.dispatchCustomEvent("joomla.alert.buttonClicked"), t.hasAttribute("data-callback") ? window[t.getAttribute("data-callback")]() : t.close(t);
      }, parseInt(t.getAttribute("auto-dismiss"), 10) ? t.getAttribute("auto-dismiss") : 3e3);
    }
  }, {
    key: "removeCloseButton",
    value: function value() {
      var t = this.querySelector("button");
      t && (t.removeEventListener("click", this), t.parentNode.removeChild(t));
    }
  }, {
    key: "getText",
    value: function value(t, e) {
      return window.Joomla && Joomla.JText && Joomla.JText._ && "function" == typeof Joomla.JText._ && Joomla.JText._(t) ? Joomla.JText._(t) : e;
    }
  }]) && o(c.prototype, h), f && o(c, f), p;
}();

customElements.define("joomla-alert", l);
