function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function t(e) {
  return (t = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
    return _typeof(t);
  } : function (t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
  })(e);
}

function e(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}

function n(t, e) {
  for (var n = 0; n < e.length; n++) {
    var i = e[n];
    i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);
  }
}

function i(e, n) {
  return !n || "object" !== t(n) && "function" != typeof n ? function (t) {
    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t;
  }(e) : n;
}

function o(t) {
  var e = "function" == typeof Map ? new Map() : void 0;
  return (o = function o(t) {
    if (null === t || (n = t, -1 === Function.toString.call(n).indexOf("[native code]"))) return t;
    var n;
    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");

    if (void 0 !== e) {
      if (e.has(t)) return e.get(t);
      e.set(t, i);
    }

    function i() {
      return r(t, arguments, c(this).constructor);
    }

    return i.prototype = Object.create(t.prototype, {
      constructor: {
        value: i,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), s(i, t);
  })(t);
}

function r(t, e, n) {
  return (r = u() ? Reflect.construct : function (t, e, n) {
    var i = [null];
    i.push.apply(i, e);
    var o = new (Function.bind.apply(t, i))();
    return n && s(o, n.prototype), o;
  }).apply(null, arguments);
}

function u() {
  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
  if (Reflect.construct.sham) return !1;
  if ("function" == typeof Proxy) return !0;

  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
  } catch (t) {
    return !1;
  }
}

function s(t, e) {
  return (s = Object.setPrototypeOf || function (t, e) {
    return t.__proto__ = e, t;
  })(t, e);
}

function c(t) {
  return (c = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  })(t);
}

customElements.define("joomla-tip", function (t) {
  !function (t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
      constructor: {
        value: t,
        writable: !0,
        configurable: !0
      }
    }), e && s(t, e);
  }(b, o(HTMLElement));
  var r,
      l,
      a,
      p,
      f,
      h = (r = b, l = u(), function () {
    var t,
        e = c(r);

    if (l) {
      var n = c(this).constructor;
      t = Reflect.construct(e, arguments, n);
    } else t = e.apply(this, arguments);

    return i(this, t);
  });

  function b() {
    return e(this, b), h.apply(this, arguments);
  }

  return a = b, f = [{
    key: "observedAttributes",
    get: function get() {
      return ["type", "label", "tip", "text", "position"];
    }
  }], (p = [{
    key: "type",
    get: function get() {
      return this.getAttribute("type");
    },
    set: function set(t) {
      return this.setAttribute("type", t);
    }
  }, {
    key: "label",
    get: function get() {
      return this.getAttribute("label");
    },
    set: function set(t) {
      return this.setAttribute("label", t);
    }
  }, {
    key: "tip",
    get: function get() {
      return this.getAttribute("tip");
    },
    set: function set(t) {
      return this.setAttribute("tip", t);
    }
  }, {
    key: "position",
    get: function get() {
      return this.getAttribute("position");
    },
    set: function set(t) {
      return this.setAttribute("position", t);
    }
  }, {
    key: "text",
    get: function get() {
      return this.getAttribute("text");
    },
    set: function set(t) {
      return this.getAttribute("text", t);
    }
  }, {
    key: "connectedCallback",
    value: function value() {
      (!this.position || this.position && -1 === ["top", "bottom", "left", "right"].indexOf(this.position)) && (this.position = "top"), this.btnElement = document.createElement("button"), this.spanElement = document.createElement("span"), this.btnElement.setAttribute("aria-label", this.label ? this.label : "more info"), this.btnElement.innerHTML = this.text ? this.text : "", this.spanElement.setAttribute("role", "status"), this.btnElement.addEventListener("click", this.showTip.bind(this)), this.append(this.btnElement), this.append(this.spanElement);
    }
  }, {
    key: "disconnectedCallback",
    value: function value() {
      this.querySelector("button").removeEventListener("click", this.showTip, !0);
    }
  }, {
    key: "showTip",
    value: function value() {
      var t = this,
          e = this;
      document.addEventListener("click", function (n) {
        t.btnElement !== n.target && (t.spanElement.innerHTML = "", e.removeEventListener("keydown", t));
      }), document.addEventListener("keydown", function (n) {
        9 === (n.keyCode || n.which) && (t.spanElement.innerHTML = "", e.removeEventListener("keydown", t));
      }), this.spanElement.innerHTML = "", this.spanElement.innerHTML = '<span class="toggletip-bubble '.concat(this.position, '">').concat(this.tip, "</span>");
    }
  }, {
    key: "dispatchCustomEvent",
    value: function value(t) {
      var e = new CustomEvent(t, {
        bubbles: !0,
        cancelable: !0
      });
      e.relatedTarget = this, this.dispatchEvent(e), this.removeEventListener(t, this);
    }
  }]) && n(a.prototype, p), f && n(a, f), b;
}());
