{"version":3,"file":"joomla-alert-es5.min.js","sources":["../../../src/js/alert/alert.js"],"sourcesContent":["(() => {\n  class JoomlaAlertElement extends HTMLElement {\n    /* Attributes to monitor */\n    static get observedAttributes() { return ['type', 'role', 'dismiss', 'acknowledge', 'href']; }\n\n    get type() { return this.getAttribute('type'); }\n\n    set type(value) { return this.setAttribute('type', value); }\n\n    get role() { return this.getAttribute('role'); }\n\n    set role(value) { return this.setAttribute('role', value); }\n\n    get dismiss() { return this.getAttribute('dismiss'); }\n\n    get autodismiss() { return this.getAttribute('auto-dismiss'); }\n\n    get acknowledge() { return this.getAttribute('acknowledge'); }\n\n    get href() { return this.getAttribute('href'); }\n\n    /* Lifecycle, element appended to the DOM */\n    connectedCallback() {\n      this.classList.add('joomla-alert--show');\n\n      // Default to info\n      if (!this.type || ['info', 'warning', 'danger', 'success'].indexOf(this.type) === -1) {\n        this.setAttribute('type', 'info');\n      }\n      // Default to alert\n      if (!this.role || ['alert', 'alertdialog'].indexOf(this.role) === -1) {\n        this.setAttribute('role', 'alert');\n      }\n      // Append button\n      if ((this.hasAttribute('dismiss') || this.hasAttribute('acknowledge')) || ((this.hasAttribute('href') && this.getAttribute('href') !== '')\n        && !this.querySelector('button.joomla-alert--close') && !this.querySelector('button.joomla-alert-button--close'))) {\n        this.appendCloseButton();\n      }\n\n      if (this.hasAttribute('auto-dismiss')) {\n        this.autoDismiss();\n      }\n\n      this.dispatchCustomEvent('joomla.alert.show');\n    }\n\n    /* Lifecycle, element removed from the DOM */\n    disconnectedCallback() {\n      this.removeEventListener('joomla.alert.show', this);\n      this.removeEventListener('joomla.alert.close', this);\n      this.removeEventListener('joomla.alert.closed', this);\n\n      if (this.firstChild.tagName && this.firstChild.tagName.toLowerCase() === 'button') {\n        this.firstChild.removeEventListener('click', this);\n      }\n    }\n\n    /* Respond to attribute changes */\n    attributeChangedCallback(attr, oldValue, newValue) {\n      switch (attr) {\n        case 'type':\n          if (!newValue || (newValue && ['info', 'warning', 'danger', 'success'].indexOf(newValue) === -1)) {\n            this.type = 'info';\n          }\n          break;\n        case 'role':\n          if (!newValue || (newValue && ['alert', 'alertdialog'].indexOf(newValue) === -1)) {\n            this.role = 'alert';\n          }\n          break;\n        case 'dismiss':\n        case 'acknowledge':\n          if (!newValue || newValue === 'true') {\n            this.appendCloseButton();\n          } else {\n            this.removeCloseButton();\n          }\n          break;\n        case 'auto-dismiss':\n          this.autoDismiss();\n          break;\n        case 'href':\n          if (!newValue || newValue === '') {\n            this.removeCloseButton();\n          } else if (!this.querySelector('button.joomla-alert-button--close')) {\n            this.appendCloseButton();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    markAlertClosed(element) {\n      this.dispatchCustomEvent('joomla.alert.closed');\n      if (element) {\n        element.parentNode.removeChild(element);\n      } else {\n        this.remove();\n      }\n    }\n\n    /* Method to close the alert */\n    close(element = null) {\n      this.dispatchCustomEvent('joomla.alert.close');\n      if (window.matchMedia('(prefers-reduced-motion)').matches) {\n        this.markAlertClosed(element);\n      } else {\n        this.addEventListener('transitionend', () => this.markAlertClosed(element), false);\n      }\n      this.classList.remove('joomla-alert--show');\n    }\n\n    /* Method to dispatch events */\n    dispatchCustomEvent(eventName) {\n      const OriginalCustomEvent = new CustomEvent(eventName);\n      OriginalCustomEvent.relatedTarget = this;\n      this.dispatchEvent(OriginalCustomEvent);\n      this.removeEventListener(eventName, this);\n    }\n\n    /* Method to create the close button */\n    appendCloseButton() {\n      if (this.querySelector('button.joomla-alert--close') || this.querySelector('button.joomla-alert-button--close')) {\n        return;\n      }\n\n      const self = this;\n      const closeButton = document.createElement('button');\n\n      if (this.hasAttribute('dismiss')) {\n        closeButton.classList.add('joomla-alert--close');\n        closeButton.innerHTML = '<span aria-hidden=\"true\">&times;</span>';\n        closeButton.setAttribute('aria-label', this.getText('JCLOSE', 'Close'));\n      } else {\n        closeButton.classList.add('joomla-alert-button--close');\n        if (this.hasAttribute('acknowledge')) {\n          closeButton.innerHTML = this.getText('JOK', 'ok');\n        } else {\n          closeButton.innerHTML = this.getText('JOPEN', 'Open');\n        }\n      }\n\n      if (this.firstChild) {\n        this.insertBefore(closeButton, this.firstChild);\n      } else {\n        this.appendChild(closeButton);\n      }\n\n      /* Add the required listener */\n      if (closeButton) {\n        if (!this.href) {\n          closeButton.addEventListener('click', () => {\n            self.dispatchCustomEvent('joomla.alert.buttonClicked');\n            if (self.getAttribute('data-callback')) {\n              window[self.getAttribute('data-callback')]();\n              self.close();\n            } else {\n              self.close();\n            }\n          });\n        } else {\n          closeButton.addEventListener('click', () => {\n            self.dispatchCustomEvent('joomla.alert.buttonClicked');\n            window.location.href = self.href;\n            self.close();\n          });\n        }\n      }\n    }\n\n    /* Method to auto-dismiss */\n    autoDismiss() {\n      const self = this;\n      setTimeout(() => {\n        self.dispatchCustomEvent('joomla.alert.buttonClicked');\n        if (self.hasAttribute('data-callback')) {\n          window[self.getAttribute('data-callback')]();\n        } else {\n          self.close(self);\n        }\n      }, parseInt(self.getAttribute('auto-dismiss'), 10) ? self.getAttribute('auto-dismiss') : 3000);\n    }\n\n    /* Method to remove the close button */\n    removeCloseButton() {\n      const button = this.querySelector('button');\n      if (button) {\n        button.removeEventListener('click', this);\n        button.parentNode.removeChild(button);\n      }\n    }\n\n    /* Method to get the translated text */\n    getText(str, fallback) {\n      // TODO: Remove coupling to Joomla CMS Core JS here\n      /* eslint-disable-next-line no-undef */\n      return (window.Joomla && Joomla.JText && Joomla.JText._ && typeof Joomla.JText._ === 'function' && Joomla.JText._(str)) ? Joomla.JText._(str) : fallback;\n    }\n  }\n\n  customElements.define('joomla-alert', JoomlaAlertElement);\n})();\n"],"names":["JoomlaAlertElement","HTMLElement","classList","add","this","type","indexOf","setAttribute","role","hasAttribute","getAttribute","querySelector","appendCloseButton","autoDismiss","dispatchCustomEvent","removeEventListener","firstChild","tagName","toLowerCase","attr","oldValue","newValue","removeCloseButton","element","parentNode","removeChild","remove","window","matchMedia","matches","markAlertClosed","addEventListener","_this","eventName","OriginalCustomEvent","CustomEvent","relatedTarget","dispatchEvent","self","closeButton","document","createElement","innerHTML","getText","insertBefore","appendChild","href","location","close","setTimeout","parseInt","button","str","fallback","Joomla","JText","_","value","customElements","define"],"mappings":"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"}