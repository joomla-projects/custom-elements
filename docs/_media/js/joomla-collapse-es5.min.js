function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function t(e) {
  return (t = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (t) {
    return _typeof(t);
  } : function (t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : _typeof(t);
  })(e);
}

function e(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}

function r(t, e) {
  for (var r = 0; r < e.length; r++) {
    var n = e[r];
    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n);
  }
}

function n(e, r) {
  return !r || "object" !== t(r) && "function" != typeof r ? function (t) {
    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t;
  }(e) : r;
}

function o(t) {
  var e = "function" == typeof Map ? new Map() : void 0;
  return (o = function o(t) {
    if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t;
    var r;
    if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");

    if (void 0 !== e) {
      if (e.has(t)) return e.get(t);
      e.set(t, n);
    }

    function n() {
      return a(t, arguments, u(this).constructor);
    }

    return n.prototype = Object.create(t.prototype, {
      constructor: {
        value: n,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), i(n, t);
  })(t);
}

function a(t, e, r) {
  return (a = c() ? Reflect.construct : function (t, e, r) {
    var n = [null];
    n.push.apply(n, e);
    var o = new (Function.bind.apply(t, n))();
    return r && i(o, r.prototype), o;
  }).apply(null, arguments);
}

function c() {
  if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
  if (Reflect.construct.sham) return !1;
  if ("function" == typeof Proxy) return !0;

  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
  } catch (t) {
    return !1;
  }
}

function i(t, e) {
  return (i = Object.setPrototypeOf || function (t, e) {
    return t.__proto__ = e, t;
  })(t, e);
}

function u(t) {
  return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  })(t);
}

customElements.define("joomla-collapse", function (t) {
  !function (t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
    t.prototype = Object.create(e && e.prototype, {
      constructor: {
        value: t,
        writable: !0,
        configurable: !0
      }
    }), e && i(t, e);
  }(y, o(HTMLElement));
  var a,
      l,
      s,
      f,
      p,
      d = (a = y, l = c(), function () {
    var t,
        e = u(a);

    if (l) {
      var r = u(this).constructor;
      t = Reflect.construct(e, arguments, r);
    } else t = e.apply(this, arguments);

    return n(this, t);
  });

  function y() {
    return e(this, y), d.apply(this, arguments);
  }

  return s = y, p = [{
    key: "observedAttributes",
    get: function get() {
      return ["state"];
    }
  }], (f = [{
    key: "state",
    get: function get() {
      return this.getAttribute("state");
    },
    set: function set(t) {
      return this.setAttribute("state", t);
    }
  }, {
    key: "connectedCallback",
    value: function value() {
      var t = this;
      this.id && [].slice.call(document.querySelectorAll('[href="#'.concat(this.id, '"],[data-target="#').concat(this.id, '"]'))).forEach(function (e) {
        !t.state || t.state && "closed" === t.state ? (t.state = "closed", e.setAttribute("aria-expanded", "false"), e.setAttribute("aria-controls", t.id)) : (e.setAttribute("aria-expanded", "true"), e.setAttribute("aria-controls", t.id)), e.addEventListener("click", function (t) {
          var e = "";
          t.target.hasAttribute("data-target") || (e = t.target.getAttribute("href").replace("#", "")), t.target.hasAttribute("href") || (e = t.target.getAttribute("data-target").replace("#", "")), t.preventDefault(), t.stopPropagation(), document.getElementById(e).toggle();
        });
      });
    }
  }, {
    key: "disconnectedCallback",
    value: function value() {
      var t = document.querySelector('[href="#'.concat(this.id, '"]'));
      t || (t = document.querySelector('[data-target="#'.concat(this.id, '"]'))), t && t.removeEventListener("click", this);
    }
  }, {
    key: "attributeChangedCallback",
    value: function value(t, e, r) {
      var n = document.querySelector('[href="#'.concat(this.id, '"]'));

      switch (t) {
        case "state":
          "closed" === r ? n.setAttribute("aria-expanded", "false") : "open" === r && n.setAttribute("aria-expanded", "true");
      }
    }
  }, {
    key: "toggle",
    value: function value() {
      var t = document.querySelector('[href="#'.concat(this.id, '"]'));
      t || (t = document.querySelector('[data-target="#'.concat(this.id, '"]'))), "closed" === this.state ? (this.state = "open", t.setAttribute("aria-expanded", "true")) : (this.state = "closed", t.setAttribute("aria-expanded", "false"));
    }
  }]) && r(s.prototype, f), p && r(s, p), y;
}());
